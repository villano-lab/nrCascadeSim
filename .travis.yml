jobs:
   include:
    # see mac images: https://docs.travis-ci.com/user/reference/osx/
    - os: osx
      osx_image: xcode11.4 
      env:  ROOTDIST="root_v6.20.00.macosx64-10.15-clang110.tar.gz"; CHECKSUM="5ec00b6c19662ecb44a430afc2326838"
      language: generic 
      python: 3.7
    - os: osx
      osx_image: xcode12 
      env:  ROOTDIST="root_v6.24.06.macos-10.15-x86_64-clang120.tar.gz"; CHECKSUM="a668732758574cbc90e143b66f22b860"
      language: generic 
      python: 3.7
    - os: linux
      dist: xenial
      env:  ROOTDIST="root_v6.20.00.Linux-ubuntu16-x86_64-gcc5.4.tar.gz"; CHECKSUM="3a5e00bcb6ebc0e8c76f6877249dfc85"
      language: python
      python: 3.7
    - os: linux
      dist: bionic
      env:  ROOTDIST="root_v6.20.00.Linux-ubuntu18-x86_64-gcc7.4.tar.gz"; CHECKSUM="3a5e00bcb6ebc0e8c76f6877249dfc85"
      language: python
      python: 3.7
    - os: linux
      dist: xenial
      env:  ROOTDIST="root_v6.24.06.Linux-ubuntu16-x86_64-gcc5.4.tar.gz"; CHECKSUM="e38c561bfed333a60b093ce655cdea73"
      language: python
      python: 3.7
    - os: linux
      dist: bionic
      env:  ROOTDIST="root_v6.24.06.Linux-ubuntu18-x86_64-gcc7.5.tar.gz"; CHECKSUM="e38c561bfed333a60b093ce655cdea73"
      language: python
      python: 3.7
    - os: linux
      dist: focal 
      env:  ROOTDIST="root_v6.24.06.Linux-ubuntu20-x86_64-gcc9.3.tar.gz"; CHECKSUM="6119a78ef8c534b6bcdd497d796b89b9"
      language: python
      python: 3.7

# osx deps
#before_install:
  #- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  #- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew list python3 &>/dev/null || brew install python3; fi
  #- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install pyenv-virtualenv; fi

install:
   - sudo chmod 777 .travis/install.sh
   - ls -lh .travis/install.sh
   - source .travis/install.sh
#  #get apt-get and conda
#  - sudo apt-get update || true
#  - sleep 10
#  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
#  - bash miniconda.sh -b -p $HOME/miniconda
#  - export PATH="$HOME/miniconda/bin:$PATH"
#  - hash -r
#  - conda config --set always_yes yes --set changeps1 no
#  - conda update -q conda || true
#
#  # Useful for debugging any issues with conda
#  - conda info -a
#
#  #set up  conda environment
#  - conda env create -n test-environment python=$TRAVIS_PYTHON_VERSION -f nrCascadeSim_env.yml 
#  - conda create -n piptest pip
#  - source activate piptest
#  - pip install -r example-usecase/requirements.txt
#
#  - sudo apt-get install make cmake g++ gcc binutils libx11-dev libxpm-dev libxft-dev libxext-dev openssl libssl-dev
   # install ROOT via binary
   - echo "installing..."
   - echo $ROOTDIST
   - echo "wget command..." 
   - echo "wget https://root.cern/download/"$ROOTDIST 
   - wget https://root.cern/download/$ROOTDIST 
   - tar -xzf $ROOTDIST 
   - source root/bin/thisroot.sh
   - echo "root libraries.."
   - echo `root-config --cflags --glibs`

   # install lcov
   - wget http://downloads.sourceforge.net/ltp/lcov-1.14.tar.gz
   - tar -zxvf lcov-1.14.tar.gz
   - cd lcov-1.14
   - sudo make install
   - cd ../
script:
  #make repository code (my code)
  - make
  - sudo make install
  - make tests
  - lcov --directory ./ --zerocounters

  # give self permission to run script
  - sudo chmod 777 tests/test_realizeCascades.sh

  # activate conda environment
  - source activate piptest

  #do the tests
  - cd tests
  - echo $CHECKSUM
  - ./test_realizeCascades.sh
  - bash test_examples.sh

  #need conda environment
  #- source activate test-environment
  #- conda list papermill
  - cd ../example-usecase
  - travis_wait 50 py.test

  #Save coverage info
  - cd ../
  - lcov --directory ./ --capture --output-file nrCascadeSim_coverage.info

  #clean up
  - sudo make clean

# Send coverage info to codecov
after_success:
  - genhtml nrCascadeSim_coverage.info
  - bash <(curl -s https://codecov.io/bash)
